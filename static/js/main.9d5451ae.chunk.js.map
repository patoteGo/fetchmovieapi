{"version":3,"sources":["api/config.js","api/request.js","store/flux.js","store/appContext.js","views/movies/Cardmovie.js","layouts/Header.js","layouts/PaginateMovie.js","views/movies/Index.js","views/actors/Cardactors.js","layouts/PaginateActor.js","views/actors/Index.js","views/tvshows/Cardtv.js","layouts/PaginateTv.js","views/tvshows/Index.js","views/movies/MovieDetails.js","views/tvshows/TvDetails.js","views/actors/ActorDetails.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["URL","getState","getStore","getActions","setStore","store","movies","peoples","tvs","active_tv","undefined","active_people","active_movie","lang","page_movie","page_people","page_tv","actions","loadAll","page","fetch","then","resp","json","fetchMovies","data","console","log","setListMovies","results","fetchActors","setListPeoples","fetchSeries","setListTvs","pageMovie","pagePeople","pageTv","loadMovie","id","fetchMovie","setMovie","loadActor","fetchActor","setActor","loadTv","fetchSerie","setTv","lista","lista2","paginatemovies","paginatetv","paginatepeople","Context","React","createContext","injectContext","PassedComponent","props","useState","state","updatedStore","setState","Object","assign","useEffect","Provider","value","Cardmovie","movie","Card","style","margin","Img","variant","src","poster_path","Body","Title","height","title","Text","overflow","overview","to","Button","Header","useContext","activeStyle","fontWeight","Navbar","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","Collapse","Nav","className","exact","Form","Control","onChange","e","target","as","custom","PaginateMovie","paginate","paginatelast","total_pages","handlePage","Pagination","First","Prev","onClick","Item","Ellipsis","active","Next","Last","Index","Container","Row","Col","md","map","index","key","Cardactors","people","profile_path","name","known_for","know","original_name","PaginateActor","Cardtv","tv","backdrop_path","PaginateTv","MovieDetails","numberWithPoints","x","toString","replace","match","params","parseInt","alt","budget","revenue","popularity","href","homepage","rel","displayMovie","TvDetails","number_of_seasons","number_of_episodes","status","displayTv","ActorDetails","birthday","place_of_birth","also_known_as","role","Routes","path","component","Movies","Moviesdetail","Tv","Tvdetail","Actors","Actordetail","render","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9d5451ae.chunk.js","sourcesContent":["export const URL = {\r\n    BASE: 'https://api.themoviedb.org/3',\r\n    TOKEN: '?api_key=7aa5c83c18833d3dd238b20bc192d730',\r\n    LANG_EN: '&language=en-US',\r\n    LANG_ES: '&language=es-ES',\r\n    PAGE: '&page=1'\r\n};\r\n// https://api.themoviedb.org/3/movie/popular?api_key=7aa5c83c18833d3dd238b20bc192d730&language=en-US&page=1\r\n\r\n","import { URL } from '@api/config'\r\n// import { Context } from \"@store/appContext\";\r\n// import { useContext, useEffect } from 'react'\r\n\r\n\r\nexport const fetchMovies = (lang, page) => {\r\n    return fetch(`${URL.BASE}/movie/popular${URL.TOKEN}${lang}${page}`).then((resp) => resp.json());\r\n}\r\n\r\nexport function fetchSeries (lang,page)  {\r\n    return fetch(`${URL.BASE}/tv/popular${URL.TOKEN}${lang}${page}`).then((resp) => resp.json());\r\n}\r\n\r\nexport function fetchActors (lang,page)  {\r\n    return fetch(`${URL.BASE}/person/popular${URL.TOKEN}${lang}${page}`).then((resp) => resp.json());\r\n}\r\n\r\n//individual\r\nexport const fetchMovie = (id, lang ) => {\r\n    return fetch(`${URL.BASE}/movie/${id}${URL.TOKEN}${lang}`).then((resp) => resp.json());\r\n}\r\n\r\nexport const fetchSerie = (id, lang ) => {\r\n    return fetch(`${URL.BASE}/tv/${id}${URL.TOKEN}${lang}`).then((resp) => resp.json());\r\n}\r\n\r\nexport const fetchActor = (id, lang ) => {\r\n    return fetch(`${URL.BASE}/person/${id}${URL.TOKEN}${lang}`).then((resp) => resp.json());\r\n}","\nimport { fetchMovies, fetchMovie, fetchActor, fetchSerie , fetchSeries, fetchActors} from '@api/request'\nimport { URL } from '@api/config'\nconst getState = ({ getStore, getActions, setStore }) => {\n\treturn {\n\t\tstore: {\n      movies: [],\n      peoples: [],\n      tvs: [],\n      active_tv: undefined,\n      active_people: undefined,\n      active_movie: undefined,\n      lang: URL.LANG_ES,\n      page_movie: URL.PAGE,\n      page_people: URL.PAGE,\n      page_tv: URL.PAGE,\n\t\t},\n\t\tactions: {\n      \n\n      loadAll: (lang, page_movie, page_people, page_tv) => {\n        \n        fetchMovies(lang,page_movie)\n        .then((data) => {\n          console.log('movies',data);\n          getActions().setListMovies(data.results, data);\n        })\n\n        fetchActors(lang,page_people)\n        .then((data) => {\n          // console.log(data);\n          getActions().setListPeoples(data.results, data);\n        })\n\n        fetchSeries(lang,page_tv)\n        .then((data) => {\n          // console.log(data);\n          getActions().setListTvs(data.results, data);\n        })\n      },\n\n      pageMovie: (page) =>{\n        setStore({ page_movie: page})\n      },\n\n      pagePeople: (page) =>{\n        setStore({ page_people: page})\n      },\n\n      pageTv: (page) =>{\n        setStore({ page_tv: page})\n      },\n\n      loadMovie: (id,lang) => {\n        if(id){\n          fetchMovie(id,lang)\n          .then((data) => {\n            console.log('movie',data);\n            getActions().setMovie(id, data);\n          })\n        }\n      },\n\n      loadActor: (id,lang) => {\n        if(id){\n          fetchActor(id,lang)\n          .then((data) => {\n            console.log('movie',data);\n            getActions().setActor(id, data);\n          })\n        }\n      },\n\n      loadTv: (id,lang) => {\n        if(id){\n          fetchSerie(id,lang)\n          .then((data) => {\n            \n            getActions().setTv(id, data);\n          })\n        }\n      },\n\n      setListMovies: (lista, lista2) => {\n        setStore({ movies: lista, paginatemovies: lista2 });\n      },\n      setListTvs: (lista, lista2) => {\n        setStore({ tvs: lista, paginatetv: lista2  });\n      },\n      setListPeoples: (lista, lista2) => {\n        setStore({ peoples: lista, paginatepeople: lista2  });\n      },\n      setMovie: (id, data) => {\n        setStore( { active_movie: data })\n      },\n      setActor: (id, data) => {\n        setStore( { active_people: data })\n      },\n      setTv: (id, data) => {\n        setStore( { active_tv: data })\n      }\n\t\t}\n\t};\n};\n\nexport default getState;","import React, { useState, useEffect } from \"react\";\nimport getState from \"./flux.js\";\n\n// Don't change, here is where we initialize our context, by default it's just going to be null.\nexport const Context = React.createContext(null);\n\n// This function injects the global store to any view/component where you want to use it, we will inject the context to layout.js, you can see it here:\n// https://github.com/4GeeksAcademy/react-hello-webapp/blob/master/src/js/layout.js#L35\nconst injectContext = PassedComponent => {\n\tconst StoreWrapper = props => {\n\t\t//this will be passed as the contenxt value\n\t\tconst [state, setState] = useState(\n\t\t\tgetState({\n\t\t\t\tgetStore: () => state.store,\n\t\t\t\tgetActions: () => state.actions,\n\t\t\t\tsetStore: updatedStore =>\n\t\t\t\t\tsetState({\n\t\t\t\t\t\tstore: Object.assign(state.store, updatedStore),\n\t\t\t\t\t\tactions: { ...state.actions }\n\t\t\t\t\t})\n\t\t\t})\n\t\t);\n\n\t\tuseEffect(() => {\n\t\t\t/**\n\t\t\t * EDIT THIS!\n\t\t\t * This function is the equivalent to \"window.onLoad\", it only runs once on the entire application lifetime\n\t\t\t * you should do your ajax requests or fetch api requests here. Do not use setState() to save data in the\n\t\t\t * store, instead use actions, like this:\n\t\t\t *\n\t\t\t * state.actions.loadSomeData(); <---- calling this function from the flux.js actions\n\t\t\t *\n\t\t\t **/\n\t\t\t// console.log(state.store.lang);\n\t\t\t  state.actions.loadAll(state.store.lang, state.store.page_movie, state.store.page_people, state.store.page_tv); \n\t\t\t  state.actions.pageMovie(state.store.page_movie);\n\t\t\t  state.actions.pagePeople(state.store.page_people);\n\t\t\t  state.actions.pageTv(state.store.page_tv);\n\t\t\t  state.actions.loadMovie(state.store.active_movie, state.store.lang);\n\t\t\t  state.actions.loadActor(state.store.active_people, state.store.lang);\n\t\t\t  state.actions.loadTv(state.store.active_tv, state.store.lang);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t}, []);\n\n\t\t// The initial value for the context is not null anymore, but the current state of this component,\n\t\t// the context will now have a getStore, getActions and setStore functions available, because they were declared\n\t\t// on the state of this component\n\t\treturn (\n\t\t\t<Context.Provider value={[state, setState]}>\n\t\t\t\t<PassedComponent {...props} />\n\t\t\t</Context.Provider>\n\t\t);\n\t};\n\treturn StoreWrapper;\n};\n\nexport default injectContext; ","import React from 'react'\r\nimport Card  from 'react-bootstrap/Card'\r\nimport { Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nconst Cardmovie = ( { movie }) => {\r\n    \r\n    return (\r\n        <Card style={{ margin: '10px 0px'}}>\r\n        <Card.Img variant=\"top\" src={'https://image.tmdb.org/t/p/w600_and_h900_bestv2/' + movie.poster_path} />\r\n        <Card.Body>\r\n            <Card.Title style={{ height: '30px'}}>{movie.title}</Card.Title>\r\n            <Card.Text style={{ height: '100px', overflow: 'hidden' }}>\r\n            {movie.overview}\r\n            </Card.Text>\r\n            <Link to={`/movie/${movie.id}`} >\r\n                <Button variant=\"info\">Ver detalles</Button>\r\n            </Link>\r\n        </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Cardmovie;","import Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Form from 'react-bootstrap/Form'\r\nimport React, { useContext } from 'react'\r\nimport { NavLink, Link} from 'react-router-dom'\r\nimport { Context } from \"@store/appContext\";\r\nimport { URL } from '../api/config'\r\nconst Header = () => {\r\n    const [ state ] = useContext(Context);\r\n    const activeStyle = {\r\n        fontWeight: \"bold\",\r\n      };\r\n\r\n    const handleLang = (e) => {\r\n        console.log('select', e.target.value);\r\n        if(e.target.value === 'INGLES'){\r\n            // console.log('cambios',state, setState);\r\n            state.actions.loadAll(URL.LANG_EN, state.store.page); \r\n            state.actions.loadMovie(state.store.active_tv, URL.LANG_EN);\r\n        } else{\r\n            state.actions.loadAll(URL.LANG_ES, state.store.page); \r\n            state.actions.loadMovie(state.store.active_tv, URL.LANG_ES);\r\n        }\r\n    }\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand ><Link to=\"/\">PELIS Y SERIES</Link></Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            \r\n                <Nav className=\"mr-auto\">\r\n                    <NavLink className=\"px-3 text-light\" exact to=\"/\"\r\n                        activeStyle={activeStyle}>PELICULAS</NavLink>\r\n                    <NavLink className=\"px-3 text-light\" exact to=\"/tv\"\r\n                        activeStyle={activeStyle}>SERIES DE TV</NavLink>\r\n                    <NavLink className=\"px-3 text-light\" exact to=\"/actors\"\r\n                        activeStyle={activeStyle}>ACTORES/ACTRICES</NavLink>\r\n                </Nav>\r\n\r\n                <Nav>\r\n                <Form.Control onChange={handleLang} as=\"select\" custom>\r\n                    <option>ESPAÑOL</option>\r\n                    <option>INGLES</option>\r\n                    </Form.Control>\r\n                    \r\n                </Nav>\r\n            </Navbar.Collapse>\r\n            </Navbar>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useContext }  from 'react'\r\nimport { Context } from \"@store/appContext\";\r\nimport Pagination from 'react-bootstrap/Pagination';\r\n\r\nfunction PaginateMovie() {\r\n    const [ state ] = useContext(Context);\r\n    console.log('pag',state.store.paginatemovies);\r\n    const paginate = () => {\r\n        if(state.store.paginatemovies){\r\n            return state.store.paginatemovies.page\r\n        }\r\n        \r\n    }\r\n\r\n    const paginatelast = () => {\r\n        if(state.store.paginatemovies){\r\n            return state.store.paginatemovies.total_pages\r\n        }\r\n        \r\n    }\r\n\r\n    const handlePage = (e) => {\r\n        state.actions.pageMovie(e);\r\n        state.actions.loadAll(state.store.lang, state.store.page_movie, state.store.page_people, state.store.page_tv); \r\n        // console.log('store2', state);\r\n    }\r\n\r\n    return (\r\n        <Pagination>\r\n            <Pagination.First />\r\n            <Pagination.Prev onClick={() => handlePage(`&page=${paginate()-1}`)} />\r\n            { paginate() > 1 &&  <Pagination.Item onClick={() => handlePage(`&page=1`)}>{1}</Pagination.Item>  }\r\n            { paginate() > 1 && <Pagination.Ellipsis />}\r\n    \r\n            {paginate()-2 > 0 && <Pagination.Item onClick={() => handlePage(`&page=${paginate()-2}`)}>{paginate()-2}</Pagination.Item>}\r\n            {paginate()-1 > 0 && <Pagination.Item onClick={() => handlePage(`&page=${paginate()-1}`)}>{paginate()-1}</Pagination.Item>}\r\n            <Pagination.Item active>{paginate()}</Pagination.Item>\r\n            {paginate()+1 < paginatelast() && <Pagination.Item onClick={() => handlePage(`&page=${paginate()+1}`)}>{paginate()+1}</Pagination.Item>}\r\n            {paginate()+2 < paginatelast() && <Pagination.Item onClick={() => handlePage(`&page=${paginate()+1}`)}>{paginate()+2}</Pagination.Item>}\r\n            \r\n\r\n            <Pagination.Ellipsis />\r\n            <Pagination.Item onClick={() => handlePage(`&page=${paginatelast()}`)}>{paginatelast()}</Pagination.Item>\r\n            <Pagination.Next onClick={() => handlePage(`&page=${paginate()+1}`)} />\r\n            <Pagination.Last />\r\n        </Pagination>\r\n    )\r\n}\r\n\r\n\r\nexport default PaginateMovie;","import React, { useContext } from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { Context } from \"@store/appContext\";\r\nimport Cardmovie from '@views/movies/Cardmovie'\r\nimport Header from '@lay/Header'\r\nimport Paginate from '@lay/PaginateMovie';\r\n// import Sidebar from '@lay/Sidebar'\r\nconst Index = () => {\r\n    const [ state ] = useContext(Context);\r\n    console.log('store', state);\r\n    // const realMovies = store.movies.results;\r\n    // console.log(realMovies);\r\n    return (\r\n\r\n     <div>\r\n         <Header/>\r\n         <Container>\r\n            <Paginate/>\r\n            <Row> \r\n              \r\n\r\n                <Col md={'12'}>\r\n                    <Row>\r\n                    { \r\n                        \r\n                        state.store.movies.map((movie,index) => {\r\n                            return (\r\n                                <Col md={3} key={index}>\r\n                                    <Cardmovie movie={movie} />\r\n                                </Col>   \r\n                            )\r\n                        })\r\n                        \r\n                    }\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            <Paginate/>\r\n         </Container>\r\n     </div>  \r\n\r\n    )\r\n}\r\n\r\nexport default Index;","import React from 'react'\r\nimport Card  from 'react-bootstrap/Card'\r\nimport { Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nconst Cardactors = ( { people }) => {\r\n    return (\r\n        <Card style={{ margin: '10px 0px'}}>\r\n        <Card.Img variant=\"top\" src={'https://image.tmdb.org/t/p/w600_and_h900_bestv2/' + people.profile_path} />\r\n        <Card.Body>\r\n            <Card.Title style={{ height: '30px'}}>{people.name}</Card.Title>\r\n            <Card.Text style={{ height: '100px', overflow: 'hidden' }}>\r\n            \r\n            {\r\n            people.known_for.map((know, index) => {\r\n              return <div key={index}>{know.original_name}</div>\r\n            \r\n            })\r\n            }\r\n            </Card.Text>\r\n            <Link to={`/actor/${people.id}`} >\r\n                <Button variant=\"info\">Ver detalles</Button>\r\n            </Link>\r\n        </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Cardactors;","import React, { useContext }  from 'react'\r\nimport { Context } from \"@store/appContext\";\r\nimport Pagination from 'react-bootstrap/Pagination';\r\n\r\nfunction PaginateActor() {\r\n    const [ state ] = useContext(Context);\r\n    console.log('pagTV',state.store.paginatepeople);\r\n    const paginate = () => {\r\n        if(state.store.paginatepeople){\r\n            return state.store.paginatepeople.page\r\n        }\r\n        \r\n    }\r\n\r\n    const paginatelast = () => {\r\n        if(state.store.paginatepeople){\r\n            return state.store.paginatepeople.total_pages\r\n        }\r\n        \r\n    }\r\n\r\n    const handlePage = (e) => {\r\n        state.actions.pagePeople(e);\r\n        state.actions.loadAll(state.store.lang, state.store.page_movie, state.store.page_people, state.store.page_tv); \r\n        // console.log('store2', state);\r\n    }\r\n\r\n    return (\r\n        <Pagination>\r\n            <Pagination.First />\r\n            <Pagination.Prev onClick={() => handlePage(`&page=${paginate()-1}`)} />\r\n            { paginate() > 1 &&  <Pagination.Item onClick={() => handlePage(`&page=1`)}>{1}</Pagination.Item>  }\r\n            { paginate() > 1 && <Pagination.Ellipsis />}\r\n    \r\n            {paginate()-2 > 0 && <Pagination.Item onClick={() => handlePage(`&page=${paginate()-2}`)}>{paginate()-2}</Pagination.Item>}\r\n            {paginate()-1 > 0 && <Pagination.Item onClick={() => handlePage(`&page=${paginate()-1}`)}>{paginate()-1}</Pagination.Item>}\r\n            <Pagination.Item active>{paginate()}</Pagination.Item>\r\n            {paginate()+1 < paginatelast() && <Pagination.Item onClick={() => handlePage(`&page=${paginate()+1}`)}>{paginate()+1}</Pagination.Item>}\r\n            {paginate()+2 < paginatelast() && <Pagination.Item onClick={() => handlePage(`&page=${paginate()+1}`)}>{paginate()+2}</Pagination.Item>}\r\n            \r\n\r\n            <Pagination.Ellipsis />\r\n            <Pagination.Item onClick={() => handlePage(`&page=${paginatelast()}`)}>{paginatelast()}</Pagination.Item>\r\n            <Pagination.Next onClick={() => handlePage(`&page=${paginate()+1}`)} />\r\n            <Pagination.Last />\r\n        </Pagination>\r\n    )\r\n}\r\n\r\n\r\nexport default PaginateActor;","import React, { useContext } from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { Context } from \"@store/appContext\";\r\nimport Cardactors from '@views/actors/Cardactors'\r\nimport Header from '@lay/Header'\r\nimport Paginate from '@lay/PaginateActor';\r\nconst Index = () => {\r\n    const [{ store, setState }] = useContext(Context);\r\n    return (\r\n\r\n     <div>\r\n         <Header/>\r\n         <Container>\r\n            <Paginate/>\r\n            <Row> \r\n                <Col md={12}>\r\n                    <Row>\r\n                    { \r\n                    \r\n                    store.peoples.map((people,index) => {\r\n                            return (\r\n                                <Col md={2} key={index}>\r\n                                    <Cardactors people={people} />\r\n                                </Col>   \r\n                            )\r\n                    })\r\n                    }\r\n                    </Row>\r\n                </Col>\r\n                {/* <Col md={3}>\r\n                    <Sidebar/>\r\n                </Col> */}\r\n            </Row>\r\n            <Paginate/>\r\n         </Container>\r\n     </div>  \r\n\r\n    )\r\n}\r\n\r\nexport default Index;","import React from 'react'\r\nimport Card  from 'react-bootstrap/Card'\r\nimport { Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nconst Cardtv = ( { tv }) => {\r\n    return (\r\n        <Card style={{ margin: '10px 0px'}}>\r\n        <Card.Img variant=\"top\" src={'https://image.tmdb.org/t/p/w600_and_h900_bestv2/' + tv.backdrop_path} />\r\n        <Card.Body>\r\n            <Card.Title style={{ height: '30px'}}>{tv.name}</Card.Title>\r\n            <Card.Text style={{ height: '100px', overflow: 'hidden' }}>\r\n            {tv.overview}\r\n            </Card.Text>\r\n            <Link to={`/tv/${tv.id}`} >\r\n                <Button variant=\"info\">Ver detalles</Button>\r\n            </Link>\r\n        </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Cardtv;","import React, { useContext }  from 'react'\r\nimport { Context } from \"@store/appContext\";\r\nimport Pagination from 'react-bootstrap/Pagination';\r\n\r\nfunction PaginateTv() {\r\n    const [ state ] = useContext(Context);\r\n    console.log('pagTV',state.store.paginatetv);\r\n    const paginate = () => {\r\n        if(state.store.paginatetv){\r\n            return state.store.paginatetv.page\r\n        }\r\n        \r\n    }\r\n\r\n    const paginatelast = () => {\r\n        if(state.store.paginatetv){\r\n            return state.store.paginatetv.total_pages\r\n        }\r\n        \r\n    }\r\n\r\n    const handlePage = (e) => {\r\n        state.actions.pageTv(e);\r\n        state.actions.loadAll(state.store.lang, state.store.page_movie, state.store.page_people, state.store.page_tv); \r\n        // console.log('store2', state);\r\n    }\r\n\r\n    return (\r\n        <Pagination>\r\n            <Pagination.First />\r\n            <Pagination.Prev onClick={() => handlePage(`&page=${paginate()-1}`)} />\r\n            { paginate() > 1 &&  <Pagination.Item onClick={() => handlePage(`&page=1`)}>{1}</Pagination.Item>  }\r\n            { paginate() > 1 && <Pagination.Ellipsis />}\r\n    \r\n            {paginate()-2 > 0 && <Pagination.Item onClick={() => handlePage(`&page=${paginate()-2}`)}>{paginate()-2}</Pagination.Item>}\r\n            {paginate()-1 > 0 && <Pagination.Item onClick={() => handlePage(`&page=${paginate()-1}`)}>{paginate()-1}</Pagination.Item>}\r\n            <Pagination.Item active>{paginate()}</Pagination.Item>\r\n            {paginate()+1 < paginatelast() && <Pagination.Item onClick={() => handlePage(`&page=${paginate()+1}`)}>{paginate()+1}</Pagination.Item>}\r\n            {paginate()+2 < paginatelast() && <Pagination.Item onClick={() => handlePage(`&page=${paginate()+1}`)}>{paginate()+2}</Pagination.Item>}\r\n            \r\n\r\n            <Pagination.Ellipsis />\r\n            <Pagination.Item onClick={() => handlePage(`&page=${paginatelast()}`)}>{paginatelast()}</Pagination.Item>\r\n            <Pagination.Next onClick={() => handlePage(`&page=${paginate()+1}`)} />\r\n            <Pagination.Last />\r\n        </Pagination>\r\n    )\r\n}\r\n\r\n\r\nexport default PaginateTv;","import React, { useContext } from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { Context } from \"@store/appContext\";\r\nimport Cardtv from '@views/tvshows/Cardtv'\r\nimport Header from '@lay/Header'\r\nimport Paginate from '@lay/PaginateTv';\r\nconst Index = () => {\r\n    const [{ store, setState }] = useContext(Context);\r\n    return (\r\n\r\n     <div>\r\n         <Header/>\r\n         <Container>\r\n         <Paginate/>\r\n            <Row> \r\n                <Col md={12}>\r\n                    <Row>\r\n                    { \r\n                    \r\n                    store.tvs.map((tv,index) => {\r\n                            return (\r\n                                <Col md={3} key={index}>\r\n                                    <Cardtv tv={tv} />\r\n                                </Col>   \r\n                            )\r\n                    })\r\n                    }\r\n                    </Row>\r\n                </Col>\r\n                {/* <Col md={3}>\r\n                    <Sidebar/>\r\n                </Col> */}\r\n            </Row>\r\n            <Paginate/>\r\n         </Container>\r\n     </div>  \r\n\r\n    )\r\n}\r\n\r\nexport default Index;","import React, { useEffect, useContext } from 'react'\r\n// import PropTypes from 'prop-types';\r\nimport Container from 'react-bootstrap/Container'\r\nimport { Context } from \"@store/appContext\";\r\nimport Header from '@lay/Header'\r\nimport './MovieDetail.sass';\r\nconst MovieDetails = (props) => {\r\n\r\n    const [ state ] = useContext(Context);\r\n\r\n    useEffect(() => {\r\n        console.log('ids',props.match.params.id, state.store.lang);\r\n      if (props.match.params.id !== undefined) {\r\n        state.actions.loadMovie(props.match.params.id, state.store.lang)\r\n      }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []) \r\n    \r\n    function numberWithPoints(x) {\r\n      return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n  }\r\n\r\n    function displayMovie(){\r\n      \r\n      if(state.store.active_movie !== undefined && parseInt(props.match.params.id) === state.store.active_movie.id) {\r\n        // console.log(props.match.params.id, state.store.active_movie.id);\r\n        return (\r\n          <div className=\"moviedetails\">\r\n            <h2>{state.store.active_movie.title}</h2>\r\n            <div className=\"detailcontainer\">\r\n              <img src={`https://image.tmdb.org/t/p/w600_and_h900_bestv2/${state.store.active_movie.backdrop_path}`} alt={state.store.active_movie.title}/>\r\n              <div className=\"text\">\r\n              {parseInt(state.store.active_movie.budget) !== 0 && <p><span>presupuesto:</span> <br/> <strong>{`$${numberWithPoints(parseInt(state.store.active_movie.budget))}`}</strong></p>}\r\n              {parseInt(state.store.active_movie.revenue) !== 0 && <p><span>ganancia:</span> <br/> <strong>{`$${numberWithPoints(state.store.active_movie.revenue)}`}</strong></p>}\r\n              <p><span>Popularidad:</span> <br/> <strong>{`${state.store.active_movie.popularity} expectadores`}</strong></p>\r\n              <p><span>Resumen:</span> <br/>{state.store.active_movie.overview}</p>\r\n              <a href={state.store.active_movie.homepage} target=\"_blank\" rel=\"noopener noreferrer\">Sitio web</a>\r\n            </div>\r\n            </div>\r\n\r\n            \r\n          </div>\r\n        )\r\n      }\r\n        \r\n      \r\n    }\r\n        return (\r\n            <div>\r\n               <Header/>\r\n         <Container>\r\n                {displayMovie()}\r\n                \r\n                { console.log(state)}\r\n                </Container>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\n// Show.propTypes = { match:PropTypes.any };\r\n\r\nexport default MovieDetails;\r\n\r\n","import React, { useEffect, useContext } from 'react'\r\n// import PropTypes from 'prop-types';\r\nimport Container from 'react-bootstrap/Container'\r\nimport { Context } from \"@store/appContext\";\r\nimport Header from '@lay/Header'\r\nimport './TvDetails.sass';\r\nconst TvDetails = (props) => {\r\n\r\n    const [ state ] = useContext(Context);\r\n\r\n    useEffect(() => {\r\n        console.log('ids',props.match.params.id, state.store.lang);\r\n      if (props.match.params.id !== undefined) {\r\n        state.actions.loadTv(props.match.params.id, state.store.lang)\r\n      }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []) \r\n    \r\n    function numberWithPoints(x) {\r\n      return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n  }\r\n\r\n    function displayTv(){\r\n      \r\n      if(state.store.active_tv !== undefined && parseInt(props.match.params.id) === state.store.active_tv.id) {\r\n        // console.log(props.match.params.id, state.store.active_tv.id);\r\n        return (\r\n          <div className=\"moviedetails\">\r\n            <h2>{state.store.active_tv.original_name}</h2>\r\n            <div className=\"detailcontainer\">\r\n              <img src={`https://image.tmdb.org/t/p/w600_and_h900_bestv2/${state.store.active_tv.backdrop_path}`} alt={state.store.active_tv.original_name}/>\r\n              <div className=\"text\">\r\n              <p><span>temporadas:</span> <br/> <strong>{state.store.active_tv.number_of_seasons}</strong></p>\r\n              <p><span>episodios:</span> <br/> <strong>{state.store.active_tv.number_of_episodes}</strong></p>\r\n              <p><span>Popularidad:</span> <br/> <strong>{`${state.store.active_tv.popularity} expectadores`}</strong></p>\r\n              <p><span>Resumen:</span> <br/>{state.store.active_tv.overview}</p>\r\n              <p><span>Estado:</span> <br/>{state.store.active_tv.status}</p>\r\n              <a href={state.store.active_tv.homepage} target=\"_blank\" rel=\"noopener noreferrer\">Sitio web</a>\r\n\r\n            </div>\r\n            </div>\r\n\r\n            \r\n          </div>\r\n        )\r\n      }\r\n        \r\n      \r\n    }\r\n        return (\r\n            <div>\r\n               <Header/>\r\n         <Container>\r\n                {displayTv()}\r\n                \r\n                { console.log(state)}\r\n                </Container>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\n// Show.propTypes = { match:PropTypes.any };\r\n\r\nexport default TvDetails;\r\n\r\n","import React, { useEffect, useContext } from 'react'\r\n// import PropTypes from 'prop-types';\r\nimport Container from 'react-bootstrap/Container'\r\nimport { Context } from \"@store/appContext\";\r\nimport Header from '@lay/Header'\r\nimport './ActorDetails.sass';\r\nconst ActorDetails = (props) => {\r\n\r\n    const [ state ] = useContext(Context);\r\n\r\n    useEffect(() => {\r\n        console.log('ids',props.match.params.id, state.store.lang);\r\n      if (props.match.params.id !== undefined) {\r\n        state.actions.loadActor(props.match.params.id, state.store.lang)\r\n      }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []) \r\n    \r\n   \r\n\r\n    function displayTv(){\r\n      \r\n      if(state.store.active_people !== undefined && parseInt(props.match.params.id) === state.store.active_people.id) {\r\n        // console.log(props.match.params.id, state.store.active_people.id);\r\n        return (\r\n          <div className=\"moviedetails\">\r\n            <h2>{state.store.active_people.name}</h2>\r\n            <div className=\"detailcontainer\">\r\n              <img src={`https://image.tmdb.org/t/p/w600_and_h900_bestv2/${state.store.active_people.profile_path}`} alt={state.store.active_people.name}/>\r\n              <div className=\"text\">\r\n              <p><span>Fecha nacimiento:</span> <br/> <strong>{`${state.store.active_people.birthday} `}</strong></p>\r\n              <p><span>Lugar nacimiento:</span> <br/> <strong>{`${state.store.active_people.place_of_birth} `}</strong></p>\r\n              <div><span>Conocid@ por:</span> <br/>\r\n                <ul>\r\n                {\r\n                    state.store.active_people.also_known_as.map((role, key) => (\r\n                            <li key={key}>{role}</li>\r\n                    ))\r\n                }\r\n                </ul>\r\n               <strong></strong>\r\n\r\n                  </div>\r\n              <p><span>Popularidad:</span> <br/> <strong>{`${state.store.active_people.popularity}`}</strong></p>\r\n              \r\n            </div>\r\n            </div>\r\n\r\n            \r\n          </div>\r\n        )\r\n      }\r\n        \r\n      \r\n    }\r\n        return (\r\n            <div>\r\n               <Header/>\r\n         <Container>\r\n                {displayTv()}\r\n                \r\n                { console.log(state)}\r\n                </Container>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\n// Show.propTypes = { match:PropTypes.any };\r\n\r\nexport default ActorDetails;\r\n\r\n","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Movies from '@views/movies/Index'\r\nimport Actors from '@views/actors/Index';\r\nimport Tv from '@views/tvshows/Index';\r\nimport Moviesdetail from '@views/movies/MovieDetails';\r\nimport Tvdetail from '@views/tvshows/TvDetails';\r\nimport Actordetail from '@views/actors/ActorDetails';\r\nconst Routes = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Movies}  />\r\n                <Route exact path=\"/movie/:id\" component={Moviesdetail} />\r\n                <Route exact path=\"/tv\" component={Tv}  />\r\n                <Route exact path=\"/tv/:id\" component={Tvdetail} />\r\n                <Route exact path=\"/actors\" component={Actors}  />\r\n                <Route exact path=\"/actor/:id\" component={Actordetail} />\r\n                <Route render={ () => <h2>404</h2> } />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes;","import React from 'react';\n\nimport injectContext from \"./store/appContext\";\n// import 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Routes from './Routes'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes/>\n    </div>\n  );\n}\n\nexport default injectContext(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}